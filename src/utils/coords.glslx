#include "../common/interface.glslx"

/* Coordinate and unit utils */
vec2 coord(in vec2 p) {
    p = p / u_Resolution.xy;
    // correct aspect ratio
    if (u_Resolution.x > u_Resolution.y)
    {
        p.x *= u_Resolution.x / u_Resolution.y;
        p.x += (u_Resolution.y - u_Resolution.x) / u_Resolution.y / 2.0;
    }
    else
    {
        p.y *= u_Resolution.y / u_Resolution.x;
        p.y += (u_Resolution.x - u_Resolution.y) / u_Resolution.x / 2.0;
    }
    // centering
    p -= 0.5;
    p *= vec2(-1.0, 1.0);
    return p;
}

float rx = 1.0 / min(u_Resolution.x, u_Resolution.y);
vec2 uv = gl_FragCoord.xy / u_Resolution.xy;
vec2 uv_square = (2.0 * gl_FragCoord.xy - u_Resolution.xy) / min(u_Resolution.y, u_Resolution.x);
vec2 st = coord(gl_FragCoord.xy);
vec2 mx = coord(u_Mouse);

/* Pixel unit conversion function */
vec2 pos(in float x, in float y) {
    return st + vec2(x * rx, y * rx);
}

vec2 pos(in float x) {
    return pos(x, x);
}

vec2 pos(in vec2 p) {
    return pos(p.x, p.y);
}

float size(in float x) {
    return x * rx;
}

vec2 size(in float x, in float y) {
    return vec2(x * rx, y * rx);
}
